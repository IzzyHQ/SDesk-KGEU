//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Order_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.CategoryItem), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.OrderItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Order_File", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.OrderItem), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.FileItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Comment_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.OrderItem), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.CommentItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Task_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.OrderItem), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TaskItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Task_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.StatusItem), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TaskItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Order_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.StatusItem), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.OrderItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Comment_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.UserItem), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.CommentItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Order_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.UserItem), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.OrderItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Order_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.UserItem), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.OrderItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Task_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.UserItem), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.TaskItem), true)]

#endregion

namespace LightSwitchApplication.Implementation
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class DeskData : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект DeskData, используя строку соединения из раздела "DeskData" файла конфигурации приложения.
        /// </summary>
        public DeskData() : base("name=DeskData", "DeskData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта DeskData.
        /// </summary>
        public DeskData(string connectionString) : base(connectionString, "DeskData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта DeskData.
        /// </summary>
        public DeskData(EntityConnection connection) : base(connection, "DeskData")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<CategoryItem> Category
        {
            get
            {
                if ((_Category == null))
                {
                    _Category = base.CreateObjectSet<CategoryItem>("Category");
                }
                return _Category;
            }
        }
        private ObjectSet<CategoryItem> _Category;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<CommentItem> Comment
        {
            get
            {
                if ((_Comment == null))
                {
                    _Comment = base.CreateObjectSet<CommentItem>("Comment");
                }
                return _Comment;
            }
        }
        private ObjectSet<CommentItem> _Comment;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<FileItem> File
        {
            get
            {
                if ((_File == null))
                {
                    _File = base.CreateObjectSet<FileItem>("File");
                }
                return _File;
            }
        }
        private ObjectSet<FileItem> _File;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OrderItem> Order
        {
            get
            {
                if ((_Order == null))
                {
                    _Order = base.CreateObjectSet<OrderItem>("Order");
                }
                return _Order;
            }
        }
        private ObjectSet<OrderItem> _Order;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<StatusItem> Status
        {
            get
            {
                if ((_Status == null))
                {
                    _Status = base.CreateObjectSet<StatusItem>("Status");
                }
                return _Status;
            }
        }
        private ObjectSet<StatusItem> _Status;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TaskItem> Task
        {
            get
            {
                if ((_Task == null))
                {
                    _Task = base.CreateObjectSet<TaskItem>("Task");
                }
                return _Task;
            }
        }
        private ObjectSet<TaskItem> _Task;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<UserItem> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<UserItem>("User");
                }
                return _User;
            }
        }
        private ObjectSet<UserItem> _User;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Category. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCategory(CategoryItem categoryItem)
        {
            base.AddObject("Category", categoryItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Comment. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToComment(CommentItem commentItem)
        {
            base.AddObject("Comment", commentItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet File. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToFile(FileItem fileItem)
        {
            base.AddObject("File", fileItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Order. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrder(OrderItem orderItem)
        {
            base.AddObject("Order", orderItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Status. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToStatus(StatusItem statusItem)
        {
            base.AddObject("Status", statusItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Task. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTask(TaskItem taskItem)
        {
            base.AddObject("Task", taskItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet User. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUser(UserItem userItem)
        {
            base.AddObject("User", userItem);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="CategoryItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта CategoryItem.
        /// </summary>
        /// <param name="categoryId">Исходное значение свойства CategoryId.</param>
        /// <param name="description">Исходное значение свойства Description.</param>
        public static CategoryItem CreateCategoryItem(global::System.Int32 categoryId, global::System.String description)
        {
            CategoryItem categoryItem = new CategoryItem();
            categoryItem.CategoryId = categoryId;
            categoryItem.Description = description;
            return categoryItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = value;
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_Category", "Order")]
        public EntityCollection<OrderItem> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderItem>("LightSwitchApplication.FK_Order_Category", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderItem>("LightSwitchApplication.FK_Order_Category", "Order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="CommentItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommentItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта CommentItem.
        /// </summary>
        /// <param name="commentId">Исходное значение свойства CommentId.</param>
        /// <param name="description">Исходное значение свойства Description.</param>
        /// <param name="c_Date">Исходное значение свойства c_Date.</param>
        /// <param name="orderId">Исходное значение свойства OrderId.</param>
        /// <param name="userId">Исходное значение свойства UserId.</param>
        public static CommentItem CreateCommentItem(global::System.Int32 commentId, global::System.String description, global::System.DateTime c_Date, global::System.Int32 orderId, global::System.Int32 userId)
        {
            CommentItem commentItem = new CommentItem();
            commentItem.CommentId = commentId;
            commentItem.Description = description;
            commentItem.c_Date = c_Date;
            commentItem.OrderId = orderId;
            commentItem.UserId = userId;
            return commentItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentId
        {
            get
            {
                return _CommentId;
            }
            set
            {
                if (_CommentId != value)
                {
                    OnCommentIdChanging(value);
                    ReportPropertyChanging("CommentId");
                    _CommentId = value;
                    ReportPropertyChanged("CommentId");
                    OnCommentIdChanged();
                }
            }
        }
        private global::System.Int32 _CommentId;
        partial void OnCommentIdChanging(global::System.Int32 value);
        partial void OnCommentIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                Onc_DateChanging(value);
                ReportPropertyChanging("c_Date");
                _c_Date = value;
                ReportPropertyChanged("c_Date");
                Onc_DateChanged();
            }
        }
        private global::System.DateTime _c_Date;
        partial void Onc_DateChanging(global::System.DateTime value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                OnOrderIdChanging(value);
                ReportPropertyChanging("OrderId");
                _OrderId = value;
                ReportPropertyChanged("OrderId");
                OnOrderIdChanged();
            }
        }
        private global::System.Int32 _OrderId;
        partial void OnOrderIdChanging(global::System.Int32 value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = value;
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Comment_Order", "Order")]
        public OrderItem OrderItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderItem>("LightSwitchApplication.FK_Comment_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderItem>("LightSwitchApplication.FK_Comment_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderItem> OrderItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderItem>("LightSwitchApplication.FK_Comment_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderItem>("LightSwitchApplication.FK_Comment_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Comment_User", "User")]
        public UserItem UserItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserItem>("LightSwitchApplication.FK_Comment_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserItem>("LightSwitchApplication.FK_Comment_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserItem> UserItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserItem>("LightSwitchApplication.FK_Comment_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserItem>("LightSwitchApplication.FK_Comment_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="FileItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта FileItem.
        /// </summary>
        /// <param name="fileId">Исходное значение свойства FileId.</param>
        /// <param name="image">Исходное значение свойства Image.</param>
        /// <param name="idOrder">Исходное значение свойства IdOrder.</param>
        /// <param name="fileName">Исходное значение свойства FileName.</param>
        public static FileItem CreateFileItem(global::System.Int32 fileId, global::System.Byte[] image, global::System.Int32 idOrder, global::System.String fileName)
        {
            FileItem fileItem = new FileItem();
            fileItem.FileId = fileId;
            fileItem.Image = image;
            fileItem.IdOrder = idOrder;
            fileItem.FileName = fileName;
            return fileItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                if (_FileId != value)
                {
                    OnFileIdChanging(value);
                    ReportPropertyChanging("FileId");
                    _FileId = value;
                    ReportPropertyChanged("FileId");
                    OnFileIdChanged();
                }
            }
        }
        private global::System.Int32 _FileId;
        partial void OnFileIdChanging(global::System.Int32 value);
        partial void OnFileIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Image
        {
            get
            {
                return StructuralObject.GetValidValue(_Image);
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = value;
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.Byte[] _Image;
        partial void OnImageChanging(global::System.Byte[] value);
        partial void OnImageChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdOrder
        {
            get
            {
                return _IdOrder;
            }
            set
            {
                OnIdOrderChanging(value);
                ReportPropertyChanging("IdOrder");
                _IdOrder = value;
                ReportPropertyChanged("IdOrder");
                OnIdOrderChanged();
            }
        }
        private global::System.Int32 _IdOrder;
        partial void OnIdOrderChanging(global::System.Int32 value);
        partial void OnIdOrderChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = value;
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_File", "Order")]
        public OrderItem Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderItem>("LightSwitchApplication.FK_Order_File", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderItem>("LightSwitchApplication.FK_Order_File", "Order").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderItem> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderItem>("LightSwitchApplication.FK_Order_File", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderItem>("LightSwitchApplication.FK_Order_File", "Order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="OrderItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OrderItem.
        /// </summary>
        /// <param name="idOrder">Исходное значение свойства IdOrder.</param>
        /// <param name="description">Исходное значение свойства Description.</param>
        /// <param name="c_Date">Исходное значение свойства c_Date.</param>
        /// <param name="categoryId">Исходное значение свойства CategoryId.</param>
        /// <param name="ownerId">Исходное значение свойства OwnerId.</param>
        /// <param name="statusId">Исходное значение свойства StatusId.</param>
        public static OrderItem CreateOrderItem(global::System.Int32 idOrder, global::System.String description, global::System.DateTime c_Date, global::System.Int32 categoryId, global::System.Int32 ownerId, global::System.Int32 statusId)
        {
            OrderItem orderItem = new OrderItem();
            orderItem.IdOrder = idOrder;
            orderItem.Description = description;
            orderItem.c_Date = c_Date;
            orderItem.CategoryId = categoryId;
            orderItem.OwnerId = ownerId;
            orderItem.StatusId = statusId;
            return orderItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdOrder
        {
            get
            {
                return _IdOrder;
            }
            set
            {
                if (_IdOrder != value)
                {
                    OnIdOrderChanging(value);
                    ReportPropertyChanging("IdOrder");
                    _IdOrder = value;
                    ReportPropertyChanged("IdOrder");
                    OnIdOrderChanged();
                }
            }
        }
        private global::System.Int32 _IdOrder;
        partial void OnIdOrderChanging(global::System.Int32 value);
        partial void OnIdOrderChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                Onc_DateChanging(value);
                ReportPropertyChanging("c_Date");
                _c_Date = value;
                ReportPropertyChanged("c_Date");
                Onc_DateChanged();
            }
        }
        private global::System.DateTime _c_Date;
        partial void Onc_DateChanging(global::System.DateTime value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = value;
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = value;
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.Int32 _OwnerId;
        partial void OnOwnerIdChanging(global::System.Int32 value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DUserId
        {
            get
            {
                return _DUserId;
            }
            set
            {
                OnDUserIdChanging(value);
                ReportPropertyChanging("DUserId");
                _DUserId = value;
                ReportPropertyChanged("DUserId");
                OnDUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DUserId;
        partial void OnDUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnDUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = value;
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Comment_Order", "Comment")]
        public EntityCollection<CommentItem> Comment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CommentItem>("LightSwitchApplication.FK_Comment_Order", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CommentItem>("LightSwitchApplication.FK_Comment_Order", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_Category", "Category")]
        public CategoryItem CategoryItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryItem>("LightSwitchApplication.FK_Order_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryItem>("LightSwitchApplication.FK_Order_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CategoryItem> CategoryItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryItem>("LightSwitchApplication.FK_Order_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CategoryItem>("LightSwitchApplication.FK_Order_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_User", "User")]
        public UserItem UserOwner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserItem>("LightSwitchApplication.FK_Order_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserItem>("LightSwitchApplication.FK_Order_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserItem> UserOwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserItem>("LightSwitchApplication.FK_Order_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserItem>("LightSwitchApplication.FK_Order_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_User1", "User")]
        public UserItem DUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserItem>("LightSwitchApplication.FK_Order_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserItem>("LightSwitchApplication.FK_Order_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserItem> DUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserItem>("LightSwitchApplication.FK_Order_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserItem>("LightSwitchApplication.FK_Order_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Task_Order", "Task")]
        public EntityCollection<TaskItem> Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskItem>("LightSwitchApplication.FK_Task_Order", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskItem>("LightSwitchApplication.FK_Task_Order", "Task", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_File", "File")]
        public EntityCollection<FileItem> FileItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FileItem>("LightSwitchApplication.FK_Order_File", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FileItem>("LightSwitchApplication.FK_Order_File", "File", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_Status", "Status")]
        public StatusItem Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusItem>("LightSwitchApplication.FK_Order_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusItem>("LightSwitchApplication.FK_Order_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StatusItem> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusItem>("LightSwitchApplication.FK_Order_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StatusItem>("LightSwitchApplication.FK_Order_Status", "Status", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="StatusItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StatusItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта StatusItem.
        /// </summary>
        /// <param name="statusId">Исходное значение свойства StatusId.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static StatusItem CreateStatusItem(global::System.Int32 statusId, global::System.String name)
        {
            StatusItem statusItem = new StatusItem();
            statusItem.StatusId = statusId;
            statusItem.Name = name;
            return statusItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                if (_StatusId != value)
                {
                    OnStatusIdChanging(value);
                    ReportPropertyChanging("StatusId");
                    _StatusId = value;
                    ReportPropertyChanged("StatusId");
                    OnStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Task_Status", "Task")]
        public EntityCollection<TaskItem> Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskItem>("LightSwitchApplication.FK_Task_Status", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskItem>("LightSwitchApplication.FK_Task_Status", "Task", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_Status", "Order")]
        public EntityCollection<OrderItem> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderItem>("LightSwitchApplication.FK_Order_Status", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderItem>("LightSwitchApplication.FK_Order_Status", "Order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TaskItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TaskItem.
        /// </summary>
        /// <param name="taskId">Исходное значение свойства TaskId.</param>
        /// <param name="description">Исходное значение свойства Description.</param>
        /// <param name="orderId">Исходное значение свойства OrderId.</param>
        /// <param name="userId">Исходное значение свойства UserId.</param>
        /// <param name="statusId">Исходное значение свойства StatusId.</param>
        /// <param name="c_Date">Исходное значение свойства c_Date.</param>
        public static TaskItem CreateTaskItem(global::System.Int32 taskId, global::System.String description, global::System.Int32 orderId, global::System.Int32 userId, global::System.Int32 statusId, global::System.DateTime c_Date)
        {
            TaskItem taskItem = new TaskItem();
            taskItem.TaskId = taskId;
            taskItem.Description = description;
            taskItem.OrderId = orderId;
            taskItem.UserId = userId;
            taskItem.StatusId = statusId;
            taskItem.c_Date = c_Date;
            return taskItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                if (_TaskId != value)
                {
                    OnTaskIdChanging(value);
                    ReportPropertyChanging("TaskId");
                    _TaskId = value;
                    ReportPropertyChanged("TaskId");
                    OnTaskIdChanged();
                }
            }
        }
        private global::System.Int32 _TaskId;
        partial void OnTaskIdChanging(global::System.Int32 value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                OnOrderIdChanging(value);
                ReportPropertyChanging("OrderId");
                _OrderId = value;
                ReportPropertyChanged("OrderId");
                OnOrderIdChanged();
            }
        }
        private global::System.Int32 _OrderId;
        partial void OnOrderIdChanging(global::System.Int32 value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = value;
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = value;
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                Onc_DateChanging(value);
                ReportPropertyChanging("c_Date");
                _c_Date = value;
                ReportPropertyChanged("c_Date");
                Onc_DateChanged();
            }
        }
        private global::System.DateTime _c_Date;
        partial void Onc_DateChanging(global::System.DateTime value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateClose
        {
            get
            {
                return _DateClose;
            }
            set
            {
                OnDateCloseChanging(value);
                ReportPropertyChanging("DateClose");
                _DateClose = value;
                ReportPropertyChanged("DateClose");
                OnDateCloseChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateClose;
        partial void OnDateCloseChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCloseChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Task_Order", "Order")]
        public OrderItem OrderItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderItem>("LightSwitchApplication.FK_Task_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderItem>("LightSwitchApplication.FK_Task_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderItem> OrderItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderItem>("LightSwitchApplication.FK_Task_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderItem>("LightSwitchApplication.FK_Task_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Task_User", "User")]
        public UserItem UserItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserItem>("LightSwitchApplication.FK_Task_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserItem>("LightSwitchApplication.FK_Task_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserItem> UserItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserItem>("LightSwitchApplication.FK_Task_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserItem>("LightSwitchApplication.FK_Task_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Task_Status", "Status")]
        public StatusItem StatusItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusItem>("LightSwitchApplication.FK_Task_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusItem>("LightSwitchApplication.FK_Task_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StatusItem> StatusItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusItem>("LightSwitchApplication.FK_Task_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StatusItem>("LightSwitchApplication.FK_Task_Status", "Status", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="UserItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта UserItem.
        /// </summary>
        /// <param name="userId">Исходное значение свойства UserId.</param>
        /// <param name="fName">Исходное значение свойства FName.</param>
        /// <param name="lName">Исходное значение свойства LName.</param>
        /// <param name="pName">Исходное значение свойства PName.</param>
        /// <param name="login">Исходное значение свойства Login.</param>
        /// <param name="email">Исходное значение свойства Email.</param>
        /// <param name="phone">Исходное значение свойства Phone.</param>
        public static UserItem CreateUserItem(global::System.Int32 userId, global::System.String fName, global::System.String lName, global::System.String pName, global::System.String login, global::System.String email, global::System.String phone)
        {
            UserItem userItem = new UserItem();
            userItem.UserId = userId;
            userItem.FName = fName;
            userItem.LName = lName;
            userItem.PName = pName;
            userItem.Login = login;
            userItem.Email = email;
            userItem.Phone = phone;
            return userItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = value;
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FName
        {
            get
            {
                return _FName;
            }
            set
            {
                OnFNameChanging(value);
                ReportPropertyChanging("FName");
                _FName = value;
                ReportPropertyChanged("FName");
                OnFNameChanged();
            }
        }
        private global::System.String _FName;
        partial void OnFNameChanging(global::System.String value);
        partial void OnFNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LName
        {
            get
            {
                return _LName;
            }
            set
            {
                OnLNameChanging(value);
                ReportPropertyChanging("LName");
                _LName = value;
                ReportPropertyChanged("LName");
                OnLNameChanged();
            }
        }
        private global::System.String _LName;
        partial void OnLNameChanging(global::System.String value);
        partial void OnLNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PName
        {
            get
            {
                return _PName;
            }
            set
            {
                OnPNameChanging(value);
                ReportPropertyChanging("PName");
                _PName = value;
                ReportPropertyChanged("PName");
                OnPNameChanged();
            }
        }
        private global::System.String _PName;
        partial void OnPNameChanging(global::System.String value);
        partial void OnPNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = value;
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = value;
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = value;
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Image
        {
            get
            {
                return StructuralObject.GetValidValue(_Image);
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = value;
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.Byte[] _Image;
        partial void OnImageChanging(global::System.Byte[] value);
        partial void OnImageChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Comment_User", "Comment")]
        public EntityCollection<CommentItem> Comment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CommentItem>("LightSwitchApplication.FK_Comment_User", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CommentItem>("LightSwitchApplication.FK_Comment_User", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_User", "Order")]
        public EntityCollection<OrderItem> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderItem>("LightSwitchApplication.FK_Order_User", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderItem>("LightSwitchApplication.FK_Order_User", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_User1", "Order")]
        public EntityCollection<OrderItem> Order1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderItem>("LightSwitchApplication.FK_Order_User1", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderItem>("LightSwitchApplication.FK_Order_User1", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Task_User", "Task")]
        public EntityCollection<TaskItem> Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskItem>("LightSwitchApplication.FK_Task_User", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskItem>("LightSwitchApplication.FK_Task_User", "Task", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
